//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.02.03 at 04:35:32 PM CET 
//


package org.knipsX.utils.JAXB.parser;

import java.math.BigDecimal;
import java.math.BigInteger;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.knipsX.utils.JAXB.parser package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _IsActive_QNAME = new QName("", "isActive");
    private final static QName _Id_QNAME = new QName("", "id");
    private final static QName _CreationDate_QNAME = new QName("", "creationDate");
    private final static QName _Significance_QNAME = new QName("", "significance");
    private final static QName _TestType_QNAME = new QName("", "testType");
    private final static QName _Parameter_QNAME = new QName("", "parameter");
    private final static QName _Description_QNAME = new QName("", "description");
    private final static QName _Name_QNAME = new QName("", "name");
    private final static QName _Path_QNAME = new QName("", "path");
    private final static QName _ExifFilterKeyword_QNAME = new QName("", "exifFilterKeyword");
    private final static QName _Type_QNAME = new QName("", "type");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.knipsX.utils.JAXB.parser
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DeactivatedPictures }
     * 
     */
    public DeactivatedPictures createDeactivatedPictures() {
        return new DeactivatedPictures();
    }

    /**
     * Create an instance of {@link Directory }
     * 
     */
    public Directory createDirectory() {
        return new Directory();
    }

    /**
     * Create an instance of {@link Reports }
     * 
     */
    public Reports createReports() {
        return new Reports();
    }

    /**
     * Create an instance of {@link Axis }
     * 
     */
    public Axis createAxis() {
        return new Axis();
    }

    /**
     * Create an instance of {@link PictureSets }
     * 
     */
    public PictureSets createPictureSets() {
        return new PictureSets();
    }

    /**
     * Create an instance of {@link PictureSet }
     * 
     */
    public PictureSet createPictureSet() {
        return new PictureSet();
    }

    /**
     * Create an instance of {@link Project }
     * 
     */
    public Project createProject() {
        return new Project();
    }

    /**
     * Create an instance of {@link ExifFilterKeywords }
     * 
     */
    public ExifFilterKeywords createExifFilterKeywords() {
        return new ExifFilterKeywords();
    }

    /**
     * Create an instance of {@link Children }
     * 
     */
    public Children createChildren() {
        return new Children();
    }

    /**
     * Create an instance of {@link Pictures }
     * 
     */
    public Pictures createPictures() {
        return new Pictures();
    }

    /**
     * Create an instance of {@link WilcoxonTest }
     * 
     */
    public WilcoxonTest createWilcoxonTest() {
        return new WilcoxonTest();
    }

    /**
     * Create an instance of {@link Picture }
     * 
     */
    public Picture createPicture() {
        return new Picture();
    }

    /**
     * Create an instance of {@link Report }
     * 
     */
    public Report createReport() {
        return new Report();
    }

    /**
     * Create an instance of {@link Axes }
     * 
     */
    public Axes createAxes() {
        return new Axes();
    }

    /**
     * Create an instance of {@link Directories }
     * 
     */
    public Directories createDirectories() {
        return new Directories();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Boolean }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "isActive")
    public JAXBElement<Boolean> createIsActive(Boolean value) {
        return new JAXBElement<Boolean>(_IsActive_QNAME, Boolean.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "id")
    public JAXBElement<BigInteger> createId(BigInteger value) {
        return new JAXBElement<BigInteger>(_Id_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigInteger }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "creationDate")
    public JAXBElement<BigInteger> createCreationDate(BigInteger value) {
        return new JAXBElement<BigInteger>(_CreationDate_QNAME, BigInteger.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BigDecimal }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "significance")
    public JAXBElement<BigDecimal> createSignificance(BigDecimal value) {
        return new JAXBElement<BigDecimal>(_Significance_QNAME, BigDecimal.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "testType")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createTestType(String value) {
        return new JAXBElement<String>(_TestType_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "parameter")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createParameter(String value) {
        return new JAXBElement<String>(_Parameter_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "description")
    public JAXBElement<String> createDescription(String value) {
        return new JAXBElement<String>(_Description_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "name")
    public JAXBElement<String> createName(String value) {
        return new JAXBElement<String>(_Name_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "path")
    public JAXBElement<String> createPath(String value) {
        return new JAXBElement<String>(_Path_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "exifFilterKeyword")
    public JAXBElement<String> createExifFilterKeyword(String value) {
        return new JAXBElement<String>(_ExifFilterKeyword_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "type")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createType(String value) {
        return new JAXBElement<String>(_Type_QNAME, String.class, null, value);
    }

}
